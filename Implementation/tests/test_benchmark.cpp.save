#include <benchmark/benchmark.h>
#include <sdsl/int_vector.hpp>
#include "../rmm-tree-classic/rmMTreeClassic.h"

using namespace sdsl;
using namespace std;

class RMMTreeFixtureBM: public benchmark::Fixture{
	public:
		RMMTree *t;
		int sizeBlock =4;
		int w=2;
		int size;
		int_vector<1> v = {1,1,1,0,1,0,0,1,1,1,1,1,0,1,0,1,0,0,0,1,0,0,1,1,1,0,1,1,0,0,1,0,1,0,0,0,0,1,0,0};
	void SetUp(const :: benchmark::State& state){
		t = new RMMTree(v,sizeBlock,w);
		size = (int)v.size();
		t->buildingTree();
	}
};

BENCHMARK_F(RMMTreeFixtureBM, findClose_binary)(benchmark::State& st){
	for(auto _ : st){
		t->findClose(st);
	}
}

BENCHMARK_REGISTER_F(RMMTreeFixtureBM,findClose_binary);

BENCHMARK_MAIN();
